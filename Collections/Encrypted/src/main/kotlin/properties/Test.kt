package meekie.properties

fun main() {
    val encrypted = "Р%п%и%е%с%б%г%м%ѐ%я%-%!%г%ь%!%с%б%т%щ%й%х%с%п%г%б%м%й%!%у%ж%л%т%у%\"%\u000B%\u000B%Т%!%н%п%н%ж%о%у%б%!%о%б%р%й%т%б%о%й%ѐ%!%г%б%щ%ж%к%!%р%ж%с%г%п%к%!%р%с%п%д%с%б%н%н%ь%!%a%I%f%m%m%p%-%!%X%p%s%m%e%\"%a%!%г%ь%!%р%с%п%е%ж%м%б%м%й%!%п%д%с%п%н%о%ь%к%!%р%ф%у%э%/%!%\u000B%У%ж%р%ж%с%э%!%г%ь%!%и%о%б%ж%у%ж%!%л%ф%е%б%!%в%п%м%э%щ%ж%-%!%ш%ж%н%!%г%!%о%б%ш%б%м%ж%!%ю%у%п%д%п%!%л%ф%с%т%б%-%!%й%-%!%о%б%е%ж%я%т%э%-%!%ш%ф%г%т%у%г%ф%ж%у%ж%!%т%ж%в%ѐ%!%ф%г%ж%с%ж%о%о%ж%ж%!%г%!%р%с%п%д%с%б%н%н%й%с%п%г%б%о%й%й%/%!%!%\u000B%\u000B%Ю%у%п%!%о%б%щ%ж%!%р%п%т%м%ж%е%о%ж%ж%!%и%б%е%б%о%й%ж%!%г%!%ю%у%п%н%!%л%ф%с%т%ж%/%!%\u000B%Н%ь%!%р%с%п%щ%м%й%!%г%н%ж%т%у%ж%!%е%п%м%д%й%к%!%р%ф%у%э%!%—%!%п%у%!%р%ж%с%г%ь%ц%!%т%у%с%п%л%!%л%п%е%б%!%е%п%!%т%м%п%з%о%ь%ц%!%и%б%е%б%ш%-%!%у%с%ж%в%ф%я%ъ%й%ц%!%ф%р%п%с%т%у%г%б%!%й%!%у%ж%с%р%ж%о%й%ѐ%/%!%!%\u000B%Г%ь%!%ф%ш%й%м%й%т%э%-%!%с%б%и%в%й%с%б%м%й%!%п%щ%й%в%л%й%-%!%р%с%ж%п%е%п%м%ж%г%б%м%й%!%у%с%ф%е%о%п%т%у%й%!%й%!%т%у%б%о%п%г%й%м%й%т%э%!%г%т%ђ%!%ф%г%ж%с%ж%о%о%ж%ж%!%г%!%т%г%п%й%ц%!%т%й%м%б%ц%/%!%!%\u000B%Т%р%б%т%й%в%п%-%!%ш%у%п%!%в%ь%м%й%!%и%е%ж%т%э%/%!%Т%р%б%т%й%в%п%!%и%б%!%е%п%г%ж%с%й%ж%-%!%и%б%!%ф%т%й%м%й%ѐ%-%!%и%б%!%г%с%ж%н%ѐ%-%!%л%п%у%п%с%п%ж%!%г%ь%!%г%м%п%з%й%м%й%!%г%!%ю%у%п%у%!%л%ф%с%т%/%\u000B%\u000B%Л%б%л%п%к%!%в%ь%!%р%ф%у%э%!%г%ь%!%о%й%!%г%ь%в%с%б%м%й%!%е%б%м%э%щ%ж%-%!%г%б%з%о%п%!%—%!%о%ж%!%т%е%б%г%б%у%э%т%ѐ%-%!%р%с%п%е%п%м%з%б%у%э%!%ф%ш%й%у%э%т%ѐ%-%!%р%с%б%л%у%й%л%п%г%б%у%э%т%ѐ%!%й%!%с%б%и%г%й%г%б%у%э%!%т%г%п%й%!%о%б%г%ь%л%й%/%\u000B%Р%ф%т%у%э%!%и%о%б%о%й%ѐ%-%!%л%п%у%п%с%ь%ж%!%г%ь%!%р%п%м%ф%ш%й%м%й%-%!%р%п%н%п%д%ф%у%!%г%б%н%!%о%б%!%ю%у%п%н%!%р%ф%у%й%/%!%!%\u000B%\u000B%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\u000B%+%+%И%б%е%б%о%й%ж%;%+%+%!%!%\u000B%Ш%у%п%в%ь%!%и%б%г%ж%с%щ%й%у%э%!%л%ф%с%т%-%!%г%ь%р%п%м%о%й%у%ж%!%т%м%ж%е%ф%я%ъ%ж%ж%;%!%!%\u000B%\u000B%.%!%Й%т%р%п%м%э%и%ф%к%у%ж%!%н%ж%у%п%е%!%a%f%o%d%s%z%q%u%)%*%a%!%й%!%и%б%щ%й%х%с%ф%к%у%ж%!%т%м%п%г%п%!%a%#%L%p%u%m%j%o%#%a%/%!%!%\u000B%.%!%Г%ь%г%ж%е%й%у%ж%!%и%б%щ%й%х%с%п%г%б%о%о%ь%к%!%с%ж%и%ф%м%э%у%б%у%!%г%!%л%п%о%т%п%м%э%/%!%!%\u000B%.%!%Г%г%ж%е%й%у%ж%!%р%п%м%ф%ш%ж%о%о%ь%к%!%л%п%е%!%о%б%!%р%м%б%у%х%п%с%н%ж%!%T%u%f%q%j%l%-%!%ш%у%п%в%ь%!%и%б%г%ж%с%щ%й%у%э%!%у%ж%т%у%/%!%!%\u000B%\u000B%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\u000B%\u000B%Т%р%б%т%й%в%п%-%!%ш%у%п%!%р%с%п%щ%м%й%!%ю%у%п%у%!%р%ф%у%э%/%!%Ф%е%б%ш%й%!%г%б%н%\"%!%!%\u000B%+%+%Б%о%е%с%ж%к%!%Т%ф%н%й%о%-%!%б%г%у%п%с%!%л%ф%с%т%б%/%+%+"
    val decrypted = decrypt(encrypted)
    println(decrypted)
    /*
    Поздравляю, вы расшифровали текст!

    С момента написания вашей первой программы `Hello, World!` вы проделали огромный путь.
    Теперь вы знаете куда больше, чем в начале этого курса, и, надеюсь, чувствуете себя увереннее в программировании.

    Это наше последнее задание в этом курсе.
    Мы прошли вместе долгий путь – от первых строк кода до сложных задач, требующих упорства и терпения.
    Вы учились, разбирали ошибки, преодолевали трудности и становились всё увереннее в своих силах.
    Спасибо, что были здесь. Спасибо за доверие, за усилия, за время, которое вы вложили в этот курс.

    Какой бы путь вы ни выбрали дальше, важно – не сдаваться, продолжать учиться, практиковаться и развивать свои навыки.
    Пусть знания, которые вы получили, помогут вам на этом пути.

    ---------------------------------------------------------
    **Задание:**
    Чтобы завершить курс, выполните следующее:

    - Используйте метод `encrypt()` и зашифруйте слово `"Kotlin"`.
    - Выведите зашифрованный результат в консоль.
    - Введите полученный код на платформе Stepik, чтобы завершить тест.

    ---------------------------------------------------------

    Спасибо, что прошли этот путь. Удачи вам!
    **Андрей Сумин, автор курса.**
     */
    val final = encrypt("Kotlin")
    println(final)
}

fun encrypt(text: String): String {
    return text.map { (it.code + 1).toChar() }.joinToString("%")
}

fun decrypt(text: String): String {
    return text.split("%")
        .mapNotNull {
            if (it.isNotEmpty()) {
                (it[0].code - 1).toChar()
            } else {
                null
            }
        }.joinToString("")
}