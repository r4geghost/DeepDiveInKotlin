package homework

/*
    Задача: Запуск кода в трёх потоках и сохранение результатов в Map

    Описание задачи:
    Вам нужно написать программу, которая выполняет код в разных потоках.

    Каждый поток (включая главный) должен:

        Получить имя текущего потока с помощью Thread.currentThread().name.
        Добавить его в общий Map<String, String>, где:
            Ключ – имя потока (Thread.currentThread().name).
            Значение – описание того, что выполняет поток.

    Метод должен вернуть Map, содержащий:

        Главный поток, который запускает остальные.
        Три созданных потока, выполняющих различные задачи.

    Требования к Map:

        Ключ (String) – имя потока.
        Значение (String) – описание, что делает этот поток:
            "Главный поток, который управляет выполнением" – для главного потока.
            "Выполняет вычисления 1" – для первого потока.
            "Выполняет вычисления 2" – для второго потока.
            "Выполняет вычисления 3" – для третьего потока.

*/

import kotlin.concurrent.thread

class ThreadRunner {
    fun runThreads(): Map<String, String> {
        val threadInfo = mutableMapOf<String, String>()

        // Добавьте в Map имя главного потока и описание его работы
        threadInfo[Thread.currentThread().name] = "Главный поток, который управляет выполнением"

        // Запустите три потока, добавляя в Map имя потока и описание его работы
        repeat(3) { index ->
            thread {
                threadInfo[Thread.currentThread().name] = "Выполняет вычисления ${index + 1}"
            }.join()
        }

        // Дождитесь завершения потоков, чтобы они успели записать свои имена в Map

        return threadInfo
    }
}

fun main() {
    val info = ThreadRunner().runThreads()
    info.map { "${it.key}: ${it.value}" }.forEach { println(it) }
}